// Bootstrap Code
@256
D=A
@SP
M=D

(OS)

@OS$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(OS$ret.0)
(Sys.init)
        
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@0
D=A
@3
D=A+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@1
D=A
@3
D=A+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
@Sys.init$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL                                    // saving stack state for each of the four big segments LCL, ARG, THIS, THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(Sys.init$ret.1)
            
@1
D=A
@5
D=A+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
(Sys.init$LOOP) 
        
@Sys.init$LOOP
0;JMP 
            
(Sys.main)
                  
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
                      
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
                      
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
                      
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
                      
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
            
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@0
D=A
@3
D=A+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@1
D=A
@3
D=A+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@1
D=A
@LCL
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@2
D=A
@LCL
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@3
D=A
@LCL
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@Sys.main$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL                                    // saving stack state for each of the four big segments LCL, ARG, THIS, THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(Sys.main$ret.2)
            
@0
D=A
@5
D=A+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
        
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
        
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
        
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
        
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
        
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
M=M+1
            
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
M=M+1
            
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
M=M+1
            
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
M=M+1
             //checking
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13                   //restoring stack segments
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
                
(Sys.add12)
        
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@0
D=A
@3
D=A+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@1
D=A
@3
D=A+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
        
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
        
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
                
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
M=M+1
             //checking
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13                   //restoring stack segments
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
                